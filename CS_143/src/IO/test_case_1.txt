# Network spec for test case 1

# Link(float buffer_size, 
#      float prop_delay, 
#      float capacity, 
#      string n1, 
#      string n2, 
#      string link_id)
link 524288 0.01 12500000 host1   router1 link0
link 524288 0.01 10000000 router1 router2 link1
link 524288 0.01 10000000 router1 router3 link2
link 524288 0.01 10000000 router2 router4 link3
link 524288 0.01 10000000 router3 router4 link4
link 524288 0.01 12500000 router4 host2   link5

# Host(shared_ptr<Link> host_link, 
#      string host_id)
host link0 host1
host link5 host2

# Router(vector<string> host_list, 
#        vector<shared_ptr<Link> > neighboring_links, 
#        string router_id)
# NOTE THAT HOST LIST IS A LIST OF STRINGS
router [host1 host2] [link0 link1 link2] router1
router [host1 host2] [link1 link3]       router2
router [host1 host2] [link2 link4]       router3
router [host1 host2] [link3 link4 link5] router4

# Flow(string ID, 
#      string dest, 
#      shared_ptr<CongestionAlg> alg, 
#      int data_size, 
#      shared_ptr<Host> host, 
#      int windowSize, 
#      float timestamp)
# How to have congestion algorithm?
# Could have a token...ehh.
# don't use underscores!
vegas flow1 host2 160000000 host1 1 0.5


